String removeDiacritics(String str) {
  for (var entry in _diacritics.entries) {
    str = str.replaceAll(entry.value, entry.key);
  }
  return str;
}

final _diacritics = {
  '3': new RegExp(r'[Ξξ]'),
  '8': new RegExp(r'[Θθ]'),
  'A': new RegExp(r'[AÀÁÂÃÄÅĀĂĄǍǞǠǺȀȂȦȺḀẠẢẤẦẨẪẬẮẰẲẴẶⒶⱯＡΆΑА]'),
  'B': new RegExp(r'[BƁƂɃḂḄḆⒷＢΒБ]'),
  'C': new RegExp(r'[CÇĆĈĊČƇȻḈⒸꜾＣЦ]'),
  'D': new RegExp(r'[DĎĐƉƊƋḊḌḎḐḒⒹꝹＤÐΔД]'),
  'E': new RegExp(r'[EÈÉÊËĒĔĖĘĚƎƐȄȆȨḔḖḘḚḜẸẺẼẾỀỂỄỆⒺＥΈΕЕЭ]'),
  'F': new RegExp(r'[FƑḞⒻꝻＦΦФ]'),
  'G': new RegExp(r'[GĜĞĠĢƓǤǦǴḠⒼꝽꝾꞠＧΓГҐ]'),
  'H': new RegExp(r'[HĤĦȞḢḤḦḨḪⒽⱧⱵꞍＨΉΗХ]'),
  'I': new RegExp(r'[IÌÍÎÏĨĪĬĮİƗǏȈȊḬḮỈỊⒾＩΊΙΪІИ]'),
  'J': new RegExp(r'[JĴɈⒿＪЙ]'),
  'K': new RegExp(r'[KĶƘǨḰḲḴⓀⱩꝀꝂꝄꞢＫΚК]'),
  'L': new RegExp(r'[LĹĻĽĿŁȽḶḸḺḼⓁⱠⱢꝆꝈꞀＬΛЛ]'),
  'M': new RegExp(r'[MƜḾṀṂⓂⱮＭΜМ]'),
  'N': new RegExp(r'[NÑŃŅŇƝǸȠṄṆṈṊⓃꞐꞤＮΝН]'),
  'O': new RegExp(r'[OÒÓÔÕÖØŌŎŐƆƟƠǑǪǬǾȌȎȪȬȮȰṌṎṐṒỌỎỐỒỔỖỘỚỜỞỠỢⓄꝊꝌＯΌΟО]'),
  'P': new RegExp(r'[PƤṔṖⓅⱣꝐꝒꝔＰΠП]'),
  'Q': new RegExp(r'[QɊⓆꝖꝘＱ]'),
  'R': new RegExp(r'[RŔŖŘȐȒɌṘṚṜṞⓇⱤꝚꞂꞦＲΡР]'),
  'S': new RegExp(r'[SŚŜŞŠȘṠṢṤṦṨẞⓈⱾꞄꞨＳΣС]'),
  'T': new RegExp(r'[TŢŤŦƬƮȚȾṪṬṮṰⓉꞆＴΤТ]'),
  'U': new RegExp(r'[UÙÚÛÜŨŪŬŮŰŲƯǓǕǗǙǛȔȖɄṲṴṶṸṺỤỦỨỪỬỮỰⓊＵУЪ]'),
  'V': new RegExp(r'[VƲɅṼṾⓋꝞＶВ]'),
  'W': new RegExp(r'[WŴẀẂẄẆẈⓌⱲＷΏΩ]'),
  'X': new RegExp(r'[XẊẌⓍＸΧ]'),
  'Y': new RegExp(r'[YÝŶŸƳȲɎẎỲỴỶỸỾⓎＹΎΥΫЫ]'),
  'Z': new RegExp(r'[ZŹŻŽƵȤẐẒẔⓏⱫⱿꝢＺΖЗ]'),
  'a': new RegExp(r'[aàáâãäåāăąǎǟǡǻȁȃȧɐḁẚạảấầẩẫậắằẳẵặⓐⱥａάαа]'),
  'b': new RegExp(r'[bƀƃɓḃḅḇⓑｂβб]'),
  'c': new RegExp(r'[cçćĉċčƈȼḉↄⓒꜿｃц]'),
  'd': new RegExp(r'[dďđƌɖɗḋḍḏḑḓⓓꝺｄðδд]'),
  'e': new RegExp(r'[eèéêëēĕėęěǝȅȇȩɇɛḕḗḙḛḝẹẻẽếềểễệⓔｅέεеэ]'),
  'f': new RegExp(r'[fƒḟⓕꝼｆφф]'),
  'g': new RegExp(r'[gĝğġģǥǧǵɠᵹḡⓖꝿꞡｇγгґ]'),
  'h': new RegExp(r'[hĥħȟɥḣḥḧḩḫẖⓗⱨⱶｈήηх]'),
  'i': new RegExp(r'[iìíîïĩīĭįıǐȉȋɨḭḯỉịⓘｉΐίιϊиі]'),
  'j': new RegExp(r'[jĵǰɉⓙｊй]'),
  'k': new RegExp(r'[kķƙǩḱḳḵⓚⱪꝁꝃꝅꞣｋκк]'),
  'l': new RegExp(r'[lĺļľŀłſƚɫḷḹḻḽⓛⱡꝇꝉꞁｌλл]'),
  'm': new RegExp(r'[mɯɱḿṁṃⓜｍμм]'),
  'n': new RegExp(r'[nñńņňŉƞǹɲṅṇṉṋⓝꞑꞥｎνн]'),
  'o': new RegExp(r'[oòóôõöøōŏőơǒǫǭǿȍȏȫȭȯȱɔɵṍṏṑṓọỏốồổỗộớờởỡợⓞꝋꝍｏοόо]'),
  'p': new RegExp(r'[pƥᵽṕṗⓟꝑꝓꝕｐπп]'),
  'q': new RegExp(r'[qɋⓠꝗꝙｑ]'),
  'r': new RegExp(r'[rŕŗřȑȓɍɽṙṛṝṟⓡꝛꞃꞧｒρр]'),
  's': new RegExp(r'[sßśŝşšșȿṡṣṥṧṩẛⓢꞅꞩｓςσс]'),
  't': new RegExp(r'[tţťŧƭțʈṫṭṯṱẗⓣⱦꞇｔτт]'),
  'u': new RegExp(r'[uùúûüũūŭůűųưǔǖǘǚǜȕȗʉṳṵṷṹṻụủứừửữựⓤｕуъ]'),
  'v': new RegExp(r'[vʋʌṽṿⓥꝟｖв]'),
  'w': new RegExp(r'[wŵẁẃẅẇẉẘⓦⱳｗωώ]'),
  'x': new RegExp(r'[xẋẍⓧｘχ]'),
  'y': new RegExp(r'[yýÿŷƴȳɏẏẙỳỵỷỹỿⓨｙΰυϋύы]'),
  'z': new RegExp(r'[zźżžƶȥɀẑẓẕⓩⱬꝣｚζз]'),
  'OE': new RegExp(r'[Œ]'),
  'oe': new RegExp(r'[œ]'),
  'AE': new RegExp(r'[ÆǢǼ]'),
  'ae': new RegExp(r'[æǣǽ]'),
  'hv': new RegExp(r'[ƕ]'),
  'OI': new RegExp(r'[Ƣ]'),
  'oi': new RegExp(r'[ƣ]'),
  'DZ': new RegExp(r'[ǄǱ]'),
  'Dz': new RegExp(r'[ǅǲ]'),
  'dz': new RegExp(r'[ǆǳ]'),
  'LJ': new RegExp(r'[Ǉ]'),
  'Lj': new RegExp(r'[ǈ]'),
  'lj': new RegExp(r'[ǉ]'),
  'NJ': new RegExp(r'[Ǌ]'),
  'Nj': new RegExp(r'[ǋ]'),
  'nj': new RegExp(r'[ǌ]'),
  'OU': new RegExp(r'[Ȣ]'),
  'ou': new RegExp(r'[ȣ]'),
  'TZ': new RegExp(r'[Ꜩ]'),
  'tz': new RegExp(r'[ꜩ]'),
  'AA': new RegExp(r'[Ꜳ]'),
  'aa': new RegExp(r'[ꜳ]'),
  'AO': new RegExp(r'[Ꜵ]'),
  'ao': new RegExp(r'[ꜵ]'),
  'AU': new RegExp(r'[Ꜷ]'),
  'au': new RegExp(r'[ꜷ]'),
  'AV': new RegExp(r'[ꜸꜺ]'),
  'av': new RegExp(r'[ꜹꜻ]'),
  'AY': new RegExp(r'[Ꜽ]'),
  'ay': new RegExp(r'[ꜽ]'),
  'OO': new RegExp(r'[Ꝏ]'),
  'oo': new RegExp(r'[ꝏ]'),
  'VY': new RegExp(r'[Ꝡ]'),
  'vy': new RegExp(r'[ꝡ]'),
  'TH': new RegExp(r'[Þ]'),
  'th': new RegExp(r'[þ]'),
  'PS': new RegExp(r'[Ψ]'),
  'ps': new RegExp(r'[ψ]'),
  'Yo': new RegExp(r'[Ё]'),
  'Ye': new RegExp(r'[Є]'),
  'Yi': new RegExp(r'[Ї]'),
  'Zh': new RegExp(r'[Ж]'),
  'Ch': new RegExp(r'[Ч]'),
  'Sh': new RegExp(r'[ШЩ]'),
  'Yu': new RegExp(r'[Ю]'),
  'Ya': new RegExp(r'[Я]'),
  'zh': new RegExp(r'[ж]'),
  'ch': new RegExp(r'[ч]'),
  'sh': new RegExp(r'[шщ]'),
  'yu': new RegExp(r'[ю]'),
  'ya': new RegExp(r'[я]'),
  'yo': new RegExp(r'[ё]'),
  'ye': new RegExp(r'[є]'),
  'yi': new RegExp(r'[ї]')
};
